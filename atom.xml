<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.S Notes</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shangbaocai.com/"/>
  <updated>2018-07-28T06:42:39.801Z</updated>
  <id>https://shangbaocai.com/</id>
  
  <author>
    <name>Mr.S</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UE4之表单提交</title>
    <link href="https://shangbaocai.com/2018/07/28/WWWFrom/"/>
    <id>https://shangbaocai.com/2018/07/28/WWWFrom/</id>
    <published>2018-07-28T01:26:10.000Z</published>
    <updated>2018-07-28T06:42:39.801Z</updated>
    
    <content type="html"><![CDATA[<p>ue4 form 填坑！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">FString CWWWForm::StartBoundary()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span> FString::Printf(TEXT(<span class="string">"\r\n--%s\r\n"</span>), *mBoundary);</span><br><span class="line">&#125;</span><br><span class="line">FString CWWWForm::EndBoundary()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span> FString::Printf(TEXT(<span class="string">"\r\n--%s--\r\n"</span>), *mBoundary);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CWWWForm::AddField(FString fieldName, FString value)</span><br><span class="line">&#123;</span><br><span class="line">FString disposition = FString::Printf(TEXT(<span class="string">"Content-Disposition: form-data;name=\"%s\"\r\n"</span>), *fieldName);</span><br><span class="line">mDatas.Append((uint8*)TCHAR_TO_UTF8(*StartBoundary()), StartBoundary().Len());</span><br><span class="line">mDatas.Append((uint8*)TCHAR_TO_UTF8(*disposition), disposition.Len());</span><br><span class="line">mDatas.Append((uint8*)TCHAR_TO_UTF8(*mTextType), mTextType.Len());</span><br><span class="line">mDatas.Append((uint8*)TCHAR_TO_UTF8(*value), value.Len());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CWWWForm::AddField(FString fieldName, int32 value)</span><br><span class="line">&#123;</span><br><span class="line">AddField(fieldName, FString::FromInt(value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CWWWForm::AddField(FString fieldName, <span class="built_in">float</span> value)</span><br><span class="line">&#123;</span><br><span class="line">AddField(fieldName, FString::SanitizeFloat(value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CWWWForm::AddBinaryData(FString fieldName, TArray&lt;uint8&gt; conents, FString fileName, FString mimeType)</span><br><span class="line">&#123;</span><br><span class="line">FString disposition = FString::Printf(TEXT(<span class="string">"Content-Disposition: form-data; name=\"%s\";  fileName=\"%s\"\r\n"</span>), *fieldName, *fileName);</span><br><span class="line">mimeType = FString::Printf(TEXT(<span class="string">"Content-Type: %s\r\n\r\n"</span>), *mimeType);</span><br><span class="line">mDatas.Append((uint8*)TCHAR_TO_UTF8(*StartBoundary()), StartBoundary().Len());</span><br><span class="line">mDatas.Append((uint8*)TCHAR_TO_UTF8(*disposition), disposition.Len());</span><br><span class="line">mDatas.Append((uint8*)TCHAR_TO_UTF8(*mimeType), mimeType.Len());</span><br><span class="line">mDatas.Append(conents);</span><br><span class="line">&#125;</span><br><span class="line">TArray&lt;uint8&gt; CWWWForm::GetDatas()</span><br><span class="line">&#123;</span><br><span class="line">mDatas.Append((uint8*)TCHAR_TO_UTF8(*EndBoundary()), EndBoundary().Len());</span><br><span class="line"><span class="built_in">return</span> mDatas;</span><br><span class="line">&#125;</span><br><span class="line">FString CWWWForm::GetBoundary()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span> mBoundary;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>网络请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">void Post(const FString&amp; url, CWWWForm form)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (url.IsEmpty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">TSharedRef&lt;IHttpRequest&gt; HttpRequest = FHttpModule::Get().CreateRequest();</span><br><span class="line">HttpRequest-&gt;SetURL(url);</span><br><span class="line">HttpRequest-&gt;SetVerb(TEXT(<span class="string">"POST"</span>));</span><br><span class="line">FString header = FString::Printf(TEXT(<span class="string">"multipart/form-data; boundary=%s"</span>), *(form.GetBoundary()));</span><br><span class="line">HttpRequest-&gt;SetHeader(<span class="string">"Content-Type"</span>, header);</span><br><span class="line">HttpRequest-&gt;SetHeader(<span class="string">"Cache-Control"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">HttpRequest-&gt;SetContent(form.GetDatas());</span><br><span class="line">HttpRequest-&gt;OnProcessRequestComplete().BindLambda([=](FHttpRequestPtr _HttpRequest, FHttpResponsePtr _HttpResponse, bool _bSucceeded)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">HttpRequest-&gt;ProcessRequest();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CWWWForm form;</span><br><span class="line">form.AddBinaryData(<span class="string">"file"</span>, fileData, fileName);</span><br><span class="line">form.AddField(<span class="string">"test"</span>, <span class="built_in">test</span>);</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line">Post(url, form);</span><br></pre></td></tr></table></figure><p>中文需要转码<br>FPlatformHttp::UrlEncode</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ue4 form 填坑！&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/s
      
    
    </summary>
    
      <category term="UE4" scheme="https://shangbaocai.com/categories/UE4/"/>
    
    
      <category term="UE4" scheme="https://shangbaocai.com/tags/UE4/"/>
    
  </entry>
  
  <entry>
    <title>UE4之ZIP解压缩</title>
    <link href="https://shangbaocai.com/2018/07/28/Zip/"/>
    <id>https://shangbaocai.com/2018/07/28/Zip/</id>
    <published>2018-07-28T01:26:10.000Z</published>
    <updated>2018-07-28T02:37:22.306Z</updated>
    
    <content type="html"><![CDATA[<p>[转载]<a href="https://blog.csdn.net/wangshubo1989/article/details/52847891" target="_blank" rel="noopener">https://blog.csdn.net/wangshubo1989/article/details/52847891</a><br>用在ue4上，必须得创建插件，不然会引起冲突</p><a id="more"></a><h2 id="引用头文件">引用头文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include "AllowWindowsPlatformTypes.h" </span></span><br><span class="line"><span class="comment">#include "zip.h"</span></span><br><span class="line"><span class="comment">#include "unzip.h"</span></span><br><span class="line"><span class="comment">#include "HideWindowsPlatformTypes.h"</span></span><br></pre></td></tr></table></figure><h2 id="压缩">压缩</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">bool Zip(FString fileName, TMap&lt;FString, FString&gt; files)</span><br><span class="line">&#123;</span><br><span class="line">HZIP hz = CreateZip(*fileName, 0);</span><br><span class="line"><span class="keyword">for</span> (auto file : files)</span><br><span class="line">&#123;</span><br><span class="line">ZipAdd(hz, *file.Key, *file.Value);</span><br><span class="line">&#125;</span><br><span class="line">CloseZip(hz);</span><br><span class="line"><span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解压">解压</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">bool UnZip(FString fileName, TArray&lt;FString&gt;&amp; files)</span><br><span class="line">&#123;</span><br><span class="line">TCHAR buffer[MAX_PATH] = &#123; 0 &#125;;</span><br><span class="line">GetCurrentDirectoryW(MAX_PATH, buffer);</span><br><span class="line">FString folder = FPaths::GetPath(fileName);</span><br><span class="line">SetCurrentDirectoryW(*folder);</span><br><span class="line"></span><br><span class="line">HZIP hz = OpenZip(*fileName, 0);</span><br><span class="line">ZIPENTRY ze; GetZipItem(hz, -1, &amp;ze); </span><br><span class="line">int numitems = ze.index;</span><br><span class="line"><span class="keyword">for</span> (int i = 0; i &lt; numitems; i++)</span><br><span class="line">&#123;</span><br><span class="line">GetZipItem(hz, i, &amp;ze);</span><br><span class="line">UnzipItem(hz, i, ze.name);</span><br><span class="line">files.Add(ze.name);</span><br><span class="line">&#125;</span><br><span class="line">CloseZip(hz);</span><br><span class="line">SetCurrentDirectoryW(buffer);</span><br><span class="line"><span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[转载]&lt;a href=&quot;https://blog.csdn.net/wangshubo1989/article/details/52847891&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/wangshubo1989/article/details/52847891&lt;/a&gt;&lt;br&gt;
用在ue4上，必须得创建插件，不然会引起冲突&lt;/p&gt;
    
    </summary>
    
      <category term="UE4" scheme="https://shangbaocai.com/categories/UE4/"/>
    
    
      <category term="UE4" scheme="https://shangbaocai.com/tags/UE4/"/>
    
  </entry>
  
  <entry>
    <title>UE4之截图三种方法</title>
    <link href="https://shangbaocai.com/2018/07/27/HighResScreenshot/"/>
    <id>https://shangbaocai.com/2018/07/27/HighResScreenshot/</id>
    <published>2018-07-27T07:50:10.000Z</published>
    <updated>2018-07-28T04:00:06.207Z</updated>
    
    <content type="html"><![CDATA[<h2 id="方法一">方法一</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">void TakePhoto(FString fileName, int32 width, int32 height, bool bUseHighResScreenshot)</span><br><span class="line">&#123;</span><br><span class="line">GIsHighResScreenshot = bUseHighResScreenshot;    //是否高清</span><br><span class="line">GScreenshotResolutionX = width;</span><br><span class="line">GScreenshotResolutionY = height;</span><br><span class="line">FScreenshotRequest::RequestScreenshot(fileName, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">FString fileNameNextScreenshot = FScreenshotRequest::GetFilename();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="方法二-命令行">方法二--命令行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mPC-&gt;ConsoleCommand(<span class="string">"shot"</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><h2 id="方法三-ascenecapture2d-相机截图">方法三--ASceneCapture2D（相机截图）</h2><p>首先分别创建<img src="https://i.loli.net/2018/07/28/5b5bdeaa8d072.png" alt="20180728105906.png"><img src="https://i.loli.net/2018/07/28/5b5bdeaa8e49b.png" alt="20180728110000.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">void ScreenShot(FString texturePath)</span><br><span class="line">&#123;</span><br><span class="line">FString path = FString::Printf(TEXT(<span class="string">"Blueprint'/Game/SceneCapture.SceneCapture_C'"</span>));</span><br><span class="line">ASceneCapture2D* sceneCapture = (ASceneCapture2D*)LoadObj(path);</span><br><span class="line">USceneCaptureComponent2D* captureComp = sceneCapture-&gt;GetCaptureComponent2D();</span><br><span class="line">sceneCapture-&gt;GetCaptureComponent2D()-&gt;TextureTarget-&gt;InitAutoFormat(256,256);  //设置大小</span><br><span class="line">sceneCapture-&gt;GetCaptureComponent2D()-&gt;UpdateContent();</span><br><span class="line"></span><br><span class="line">auto lambda = [=]()</span><br><span class="line">&#123;</span><br><span class="line">SaveRenderTargetToDisk(sceneCapture-&gt;GetCaptureComponent2D()-&gt;TextureTarget, texturePath);</span><br><span class="line">sceneCapture-&gt;Destroy();</span><br><span class="line">&#125;;</span><br><span class="line">FTimerHandle screenshotTimer;</span><br><span class="line">GetWorld()-&gt;GetTimerManager().SetTimer(screenshotTimer, lambda, 0.0001f, <span class="literal">false</span>, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">AActor* LoadObj(FString path)</span><br><span class="line">&#123;</span><br><span class="line">AActor* spawnActor = nullptr;</span><br><span class="line">UObject* loadObj = LoadObject&lt;UObject&gt;(nullptr, *path);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (loadObj != NULL)</span><br><span class="line">&#123;</span><br><span class="line">UBlueprintGeneratedClass* ubp = Cast&lt;UBlueprintGeneratedClass&gt;(loadObj);</span><br><span class="line"><span class="keyword">if</span> (ubp != NULL)</span><br><span class="line">&#123;</span><br><span class="line">spawnActor = GEngine-&gt;GameViewport-&gt;GetWorld()-&gt;SpawnActor&lt;AActor&gt;(ubp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> spawnActor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把图片保存到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">void SaveRenderTargetToDisk(UTextureRenderTarget2D* inRenderTarget, FString filePath)</span><br><span class="line">&#123;</span><br><span class="line">FTextureRenderTargetResource* RTResource = inRenderTarget-&gt;GameThread_GetRenderTargetResource();</span><br><span class="line"></span><br><span class="line">FReadSurfaceDataFlags ReadPixelFlags(RCM_UNorm);</span><br><span class="line">ReadPixelFlags.SetLinearToGamma(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">TArray&lt;FColor&gt; OutBMP;</span><br><span class="line">RTResource-&gt;ReadPixels(OutBMP, ReadPixelFlags);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (FColor&amp; color : OutBMP)</span><br><span class="line">&#123;</span><br><span class="line">color.A = 255;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FIntRect SourceRect;</span><br><span class="line"></span><br><span class="line">FIntPoint DestSize(inRenderTarget-&gt;GetSurfaceWidth(), inRenderTarget-&gt;GetSurfaceHeight());</span><br><span class="line"></span><br><span class="line">FString ResultPath;</span><br><span class="line">FHighResScreenshotConfig&amp; HighResScreenshotConfig = GetHighResScreenshotConfig();</span><br><span class="line">HighResScreenshotConfig.SaveImage(filePath, OutBMP, DestSize, &amp;ResultPath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;方法一&quot;&gt;方法一&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void TakePhoto(FString fileName, int32 width, int32 height, bool bUseHighResScreenshot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GIsHighResScreenshot = bUseHighResScreenshot;    //是否高清&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GScreenshotResolutionX = width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GScreenshotResolutionY = height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FScreenshotRequest::RequestScreenshot(fileName, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FString fileNameNextScreenshot = FScreenshotRequest::GetFilename();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="UE4" scheme="https://shangbaocai.com/categories/UE4/"/>
    
    
      <category term="UE4" scheme="https://shangbaocai.com/tags/UE4/"/>
    
  </entry>
  
  <entry>
    <title>UE4之c++调用蓝图变量</title>
    <link href="https://shangbaocai.com/2018/07/27/C++CallBlueprintProperty/"/>
    <id>https://shangbaocai.com/2018/07/27/C++CallBlueprintProperty/</id>
    <published>2018-07-27T01:31:03.000Z</published>
    <updated>2018-07-27T10:01:09.306Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">template&lt;class T&gt;</span><br><span class="line">static const void* CallBlueprintProperty(const AActor* otherActor, const FName propertyName)</span><br><span class="line">&#123;</span><br><span class="line">const void* outValue = nullptr;</span><br><span class="line"></span><br><span class="line">UClass* myClass = otherActor-&gt;GetClass();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (UProperty* Property = myClass-&gt;PropertyLink; Property; Property = Property-&gt;PropertyLinkNext)</span><br><span class="line">&#123;</span><br><span class="line">T* inProperty = Cast&lt;T&gt;(Property);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (inProperty &amp;&amp; Property-&gt;GetFName() == propertyName)</span><br><span class="line">&#123;</span><br><span class="line">outValue = &amp;inProperty-&gt;GetPropertyValue(Property-&gt;ContainerPtrToValuePtr&lt;void&gt;(otherActor));</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> outValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">float</span> <span class="built_in">test</span> = *(<span class="built_in">float</span>*)CallBlueprintProperty&lt;UFloatProperty&gt;(AActor*, FName(<span class="string">"test"</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
      <category term="UE4" scheme="https://shangbaocai.com/categories/UE4/"/>
    
    
      <category term="UE4" scheme="https://shangbaocai.com/tags/UE4/"/>
    
  </entry>
  
  <entry>
    <title>UE4之获取文件Md5</title>
    <link href="https://shangbaocai.com/2018/07/27/GetFileMd5/"/>
    <id>https://shangbaocai.com/2018/07/27/GetFileMd5/</id>
    <published>2018-07-27T00:56:02.000Z</published>
    <updated>2018-07-27T07:52:01.271Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">FString GetFileMD5(FString filePath)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ExistsFile(filePath))</span><br><span class="line">&#123;</span><br><span class="line">FString content;</span><br><span class="line">FFileHelper::LoadFileToString(content, *filePath);</span><br><span class="line">TArray&lt;uint8&gt; outArray;</span><br><span class="line"><span class="keyword">if</span> (FFileHelper::LoadFileToArray(outArray, *filePath))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span> GetMd5Str(outArray);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FString GetMd5Str(TArray&lt;uint8&gt; inArray) &#123;</span><br><span class="line">FMD5 md5Maker;</span><br><span class="line">md5Maker.Update(inArray.GetData(), inArray.Num());</span><br><span class="line">uint8 digest[16];</span><br><span class="line">md5Maker.Final(digest);</span><br><span class="line">FString mD5Str;</span><br><span class="line"><span class="keyword">for</span> (int32 i = 0; i &lt; 16; i++)</span><br><span class="line">&#123;</span><br><span class="line">mD5Str += FString::Printf(TEXT(<span class="string">"%02x"</span>), digest[i]);</span><br><span class="line">&#125;</span><br><span class="line">mD5Str = mD5Str.ToUpper();</span><br><span class="line"><span class="built_in">return</span> mD5Str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
      <category term="UE4" scheme="https://shangbaocai.com/categories/UE4/"/>
    
    
      <category term="UE4" scheme="https://shangbaocai.com/tags/UE4/"/>
    
  </entry>
  
</feed>
