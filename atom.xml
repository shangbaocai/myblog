<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.S Notes</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shangbaocai.com/"/>
  <updated>2018-07-28T02:21:15.864Z</updated>
  <id>https://shangbaocai.com/</id>
  
  <author>
    <name>Mr.S</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UE4之ZIP解压缩</title>
    <link href="https://shangbaocai.com/2018/07/28/zip/"/>
    <id>https://shangbaocai.com/2018/07/28/zip/</id>
    <published>2018-07-28T01:26:10.000Z</published>
    <updated>2018-07-28T02:21:15.864Z</updated>
    
    <content type="html"><![CDATA[<p>[转载]<a href="https://blog.csdn.net/wangshubo1989/article/details/52847891" target="_blank" rel="noopener">https://blog.csdn.net/wangshubo1989/article/details/52847891</a>用在ue4上，必须得创建插件，不然会引起冲突</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include "AllowWindowsPlatformTypes.h" </span></span><br><span class="line"><span class="comment">#include "zip.h"</span></span><br><span class="line"><span class="comment">#include "unzip.h"</span></span><br><span class="line"><span class="comment">#include "HideWindowsPlatformTypes.h"</span></span><br></pre></td></tr></table></figure><p>#压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">bool Zip(FString fileName, TMap&lt;FString, FString&gt; files)</span><br><span class="line">&#123;</span><br><span class="line">HZIP hz = CreateZip(*fileName, 0);</span><br><span class="line"><span class="keyword">for</span> (auto file : files)</span><br><span class="line">&#123;</span><br><span class="line">ZipAdd(hz, *file.Key, *file.Value);</span><br><span class="line">&#125;</span><br><span class="line">CloseZip(hz);</span><br><span class="line"><span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">bool UnZip(FString fileName, TArray&lt;FString&gt;&amp; files)</span><br><span class="line">&#123;</span><br><span class="line">TCHAR buffer[MAX_PATH] = &#123; 0 &#125;;</span><br><span class="line">GetCurrentDirectoryW(MAX_PATH, buffer);</span><br><span class="line">FString folder = FPaths::GetPath(fileName);</span><br><span class="line">SetCurrentDirectoryW(*folder);</span><br><span class="line"></span><br><span class="line">HZIP hz = OpenZip(*fileName, 0);</span><br><span class="line">ZIPENTRY ze; GetZipItem(hz, -1, &amp;ze); </span><br><span class="line">int numitems = ze.index;</span><br><span class="line"><span class="keyword">for</span> (int i = 0; i &lt; numitems; i++)</span><br><span class="line">&#123;</span><br><span class="line">GetZipItem(hz, i, &amp;ze);</span><br><span class="line">UnzipItem(hz, i, ze.name);</span><br><span class="line">files.Add(ze.name);</span><br><span class="line">&#125;</span><br><span class="line">CloseZip(hz);</span><br><span class="line">SetCurrentDirectoryW(buffer);</span><br><span class="line"><span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[转载]&lt;a href=&quot;https://blog.csdn.net/wangshubo1989/article/details/52847891&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/wangshubo
      
    
    </summary>
    
      <category term="UE4" scheme="https://shangbaocai.com/categories/UE4/"/>
    
    
      <category term="UE4" scheme="https://shangbaocai.com/tags/UE4/"/>
    
  </entry>
  
  <entry>
    <title>UE4之高清截图</title>
    <link href="https://shangbaocai.com/2018/07/27/HighResScreenshot/"/>
    <id>https://shangbaocai.com/2018/07/27/HighResScreenshot/</id>
    <published>2018-07-27T07:50:10.000Z</published>
    <updated>2018-07-27T07:53:51.461Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">void TakePhoto(FString fileName, int32 width, int32 height, bool bUseHighResScreenshot)</span><br><span class="line">&#123;</span><br><span class="line">GIsHighResScreenshot = bUseHighResScreenshot;</span><br><span class="line">GScreenshotResolutionX = width;</span><br><span class="line">GScreenshotResolutionY = height;</span><br><span class="line">FScreenshotRequest::RequestScreenshot(fileName, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">FString fileNameNextScreenshot = FScreenshotRequest::GetFilename();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="UE4" scheme="https://shangbaocai.com/categories/UE4/"/>
    
    
      <category term="UE4" scheme="https://shangbaocai.com/tags/UE4/"/>
    
  </entry>
  
  <entry>
    <title>UE4之c++调用蓝图变量</title>
    <link href="https://shangbaocai.com/2018/07/27/C++CallBlueprintProperty/"/>
    <id>https://shangbaocai.com/2018/07/27/C++CallBlueprintProperty/</id>
    <published>2018-07-27T01:31:03.000Z</published>
    <updated>2018-07-27T10:01:09.306Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">template&lt;class T&gt;</span><br><span class="line">static const void* CallBlueprintProperty(const AActor* otherActor, const FName propertyName)</span><br><span class="line">&#123;</span><br><span class="line">const void* outValue = nullptr;</span><br><span class="line"></span><br><span class="line">UClass* myClass = otherActor-&gt;GetClass();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (UProperty* Property = myClass-&gt;PropertyLink; Property; Property = Property-&gt;PropertyLinkNext)</span><br><span class="line">&#123;</span><br><span class="line">T* inProperty = Cast&lt;T&gt;(Property);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (inProperty &amp;&amp; Property-&gt;GetFName() == propertyName)</span><br><span class="line">&#123;</span><br><span class="line">outValue = &amp;inProperty-&gt;GetPropertyValue(Property-&gt;ContainerPtrToValuePtr&lt;void&gt;(otherActor));</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> outValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">float</span> <span class="built_in">test</span> = *(<span class="built_in">float</span>*)CallBlueprintProperty&lt;UFloatProperty&gt;(AActor*, FName(<span class="string">"test"</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
      <category term="UE4" scheme="https://shangbaocai.com/categories/UE4/"/>
    
    
      <category term="UE4" scheme="https://shangbaocai.com/tags/UE4/"/>
    
  </entry>
  
  <entry>
    <title>UE4之获取文件Md5</title>
    <link href="https://shangbaocai.com/2018/07/27/GetFileMd5/"/>
    <id>https://shangbaocai.com/2018/07/27/GetFileMd5/</id>
    <published>2018-07-27T00:56:02.000Z</published>
    <updated>2018-07-27T07:52:01.271Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">FString GetFileMD5(FString filePath)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ExistsFile(filePath))</span><br><span class="line">&#123;</span><br><span class="line">FString content;</span><br><span class="line">FFileHelper::LoadFileToString(content, *filePath);</span><br><span class="line">TArray&lt;uint8&gt; outArray;</span><br><span class="line"><span class="keyword">if</span> (FFileHelper::LoadFileToArray(outArray, *filePath))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">return</span> GetMd5Str(outArray);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FString GetMd5Str(TArray&lt;uint8&gt; inArray) &#123;</span><br><span class="line">FMD5 md5Maker;</span><br><span class="line">md5Maker.Update(inArray.GetData(), inArray.Num());</span><br><span class="line">uint8 digest[16];</span><br><span class="line">md5Maker.Final(digest);</span><br><span class="line">FString mD5Str;</span><br><span class="line"><span class="keyword">for</span> (int32 i = 0; i &lt; 16; i++)</span><br><span class="line">&#123;</span><br><span class="line">mD5Str += FString::Printf(TEXT(<span class="string">"%02x"</span>), digest[i]);</span><br><span class="line">&#125;</span><br><span class="line">mD5Str = mD5Str.ToUpper();</span><br><span class="line"><span class="built_in">return</span> mD5Str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
      <category term="UE4" scheme="https://shangbaocai.com/categories/UE4/"/>
    
    
      <category term="UE4" scheme="https://shangbaocai.com/tags/UE4/"/>
    
  </entry>
  
</feed>
